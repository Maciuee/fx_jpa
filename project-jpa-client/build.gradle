/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

*/
plugins {
id 'java'
}
group = 'com.project'
version = '1.0'
repositories {
jcenter()
}
dependencies {
compile group: 'org.hsqldb', name: 'hsqldb', version: '2.5.0'
compile group: 'com.zaxxer', name: 'HikariCP', version: '3.4.2'
compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
compile group: 'org.hibernate', name: 'hibernate-core', version: '5.4.13.Final'
testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.1'
 testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.1'
}
// kopiowanie katalogu bibliotekami
task copyRuntimeLibs(type: Copy) {
into "$buildDir/libs/lib/"
from configurations.compile
}
// kopiowanie katalogu z baza danych
task copyDb(type: Copy) {
into "$buildDir/libs/db"
from "db"
}
// attach to assemble task
assemble.dependsOn copyRuntimeLibs, copyDb
jar {
manifest {
attributes 'Main-Class' : 'com.project.app.ProjectClientApplication'
attributes 'Class-Path' : configurations.compile.collect { 'lib/' + it.getName() }.join(' ')
}
}
test { 
 useJUnitPlatform() //aktywacja natywnego wsparcia (od wersji 4.6 Gradle’a)
 testLogging {
 showStandardStreams = true //w³¹cza drukowanie komunikatów w konsoli
 }
}